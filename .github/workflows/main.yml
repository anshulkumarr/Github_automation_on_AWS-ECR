name: Docker Build and Push

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker
      uses: docker/setup-buildx-action@v1

    - name: Get AWS ECR credentials
      id: ecr-login
      run: |
        echo "::set-output name=AWS_ACCESS_KEY_ID::$(curl -s 169.254.170.2$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI | jq -r .AccessKeyId)"
        echo "::set-output name=AWS_SECRET_ACCESS_KEY::$(curl -s 169.254.170.2$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI | jq -r .SecretAccessKey)"
        echo "::set-output name=AWS_SESSION_TOKEN::$(curl -s 169.254.170.2$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI | jq -r .Token)"

    - name: Login to AWS ECR
      run: |
        docker login -u AWS -p "${{ secrets.AWS_SESSION_TOKEN }}" "${{ secrets.AWS_ECR_REGISTRY_URI }}"

    - name: Build and push Docker image
      run: |
        docker buildx create --use
        docker buildx inspect --bootstrap

        docker buildx build --platform linux/amd64,linux/arm64 -t "${{ secrets.AWS_ECR_REGISTRY_URI }}:$GITHUB_RUN_NUMBER" -t "${{ secrets.AWS_ECR_REGISTRY_URI }}:latest" -f Dockerfile .
        docker tag "${{ secrets.AWS_ECR_REGISTRY_URI }}:$GITHUB_RUN_NUMBER" "${{ secrets.AWS_ECR_REGISTRY_URI }}:latest"

        docker push "${{ secrets.AWS_ECR_REGISTRY_URI }}:$GITHUB_RUN_NUMBER"
        docker push "${{ secrets.AWS_ECR_REGISTRY_URI }}:latest"

      env:
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
